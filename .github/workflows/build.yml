on: push

name: Build

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    name: build-${{ matrix.os }}-${{ matrix.rust }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust:
          - 1.82.0  # MSRV
    steps:
      - uses: actions/checkout@v5

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy

      - run: cargo build

      - run: cargo test

      - run: cargo fmt --all -- --check

      - run: cargo clippy -- -D warnings

  build-remote:
    runs-on: ${{ matrix.os }}
    name: build-remote-${{ matrix.os }}-${{ matrix.rust }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust:
          - 1.82.0  # MSRV
    steps:
      - uses: actions/checkout@v5

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}

      - run: cargo build --features remote

      - run: cargo test --features remote

  build-standalone:
    runs-on: ${{ matrix.os }}
    name: build-standalone-${{ matrix.os }}-${{ matrix.rust }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust:
          - 1.82.0  # MSRV
    steps:
      - uses: actions/checkout@v5

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}

      - run: cargo build --features standalone

      - run: cargo test --features standalone

  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Build development version
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: httpmock/httpmock:build
